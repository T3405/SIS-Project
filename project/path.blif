.model DATAPATH
.inputs I4 I3 I2 I1 I0 INIT_MAIN INIT_LOAD SEL_2 SEL_1 SEL_0

#.outputs A_O4 A_O3 A_O2 A_O1 A_O0 MAIN_ENA MAIN_ENB MAIN_ENC SEL_SECT1 SEL_SECT0

.outputs O4 O3 O2 O1 O0

#MUX SECTOR DECODER
.subckt MUX_3 A2=I2 A1=I1 A0=I0 B2=SEL_2 B1=SEL_1 B0=SEL_0 S=INIT_LOAD O2=DECODER_OUT2 O1=DECODER_OUT1 O0=DECODER_OUT0

#SECTOR DECODER
.subckt DECODER3 IA=DECODER_OUT2 IB=DECODER_OUT1 IC=DECODER_OUT0 O0=SEL_SECT0 O1=SEL_SECT1 OE=ERROR_SECTOR

#---------------------------------------------------------------
#RESET NOR(INIT_MAIN,INIT_LOAD) = RESET SIGNAL
.subckt NOR A=INIT_MAIN B=INIT_LOAD C=RESET

#---------------------------------------------------------------

#A REGISTER WITH IS LIGHT COMPARATOR
.subckt REG5_E I0=A_I0 I1=A_I1 I2=A_I2 I3=A_I3 I4=A_I4 O0=A_O0 O1=A_O1 O2=A_O2 O3=A_O3 O4=A_O4 ENABLE=EN_A
.subckt LESS_EQUAL A4=CONST1 A3=CONST1 A2=CONST1 A1=CONST1 A0=CONST1 B4=A_O4 B3=A_O3 B2=A_O2 B1=A_O1 B0=A_O0 O=LIGHT_A

#B REGISTER WITH IS LIGHT COMPARATOR
.subckt REG5_E I0=B_I0 I1=B_I1 I2=B_I2 I3=B_I3 I4=B_I4 O0=B_O0 O1=B_O1 O2=B_O2 O3=B_O3 O4=B_O4 ENABLE=EN_B
.subckt LESS_EQUAL A4=CONST1 A3=CONST1 A2=CONST1 A1=CONST1 A0=CONST1 B4=B_O4 B3=B_O3 B2=B_O2 B1=B_O1 B0=B_O0 O=LIGHT_B

#C REGISTER WITH IS LIGHT COMPARATOR
.subckt REG5_E I0=C_I0 I1=C_I1 I2=C_I2 I3=C_I3 I4=C_I4 O0=C_O0 O1=C_O1 O2=C_O2 O3=C_O3 O4=C_O4 ENABLE=EN_C
.subckt LESS_EQUAL A4=CONST1 A3=CONST1 A2=CONST0 A1=CONST0 A0=CONST0 B4=C_O4 B3=C_O3 B2=C_O2 B1=C_O1 B0=C_O0 O=LIGHT_C



#MUX A INPUT SELECTOR
.subckt MUX2_5_PRESET0 A4=I4 A3=I3 A2=I2 A1=I1 A0=I0 B4=MAIN_OUT4 B3=MAIN_OUT3 B2=MAIN_OUT2 B1=MAIN_OUT1 B0=MAIN_OUT0 S1=INIT_MAIN S0=INIT_LOAD O4=A_I4 O3=A_I3 O2=A_I2 O1=A_I1 O0=A_I0

#MUX B INPUT SELECTOR
.subckt MUX2_5_PRESET0 A4=I4 A3=I3 A2=I2 A1=I1 A0=I0 B4=MAIN_OUT4 B3=MAIN_OUT3 B2=MAIN_OUT2 B1=MAIN_OUT1 B0=MAIN_OUT0 S0=INIT_LOAD S1=INIT_MAIN O4=B_I4 O3=B_I3 O2=B_I2 O1=B_I1 O0=B_I0

#MUX C INPUT SELECTOR
.subckt MUX2_5_PRESET0 A4=C_IN4 A3=C_IN3 A2=C_IN2 A1=C_IN1 A0=C_IN0 B4=MAIN_OUT4 B3=MAIN_OUT3 B2=MAIN_OUT2 B1=MAIN_OUT1 B0=MAIN_OUT0 S0=INIT_LOAD S1=INIT_MAIN O4=C_I4 O3=C_I3 O2=C_I2 O1=C_I1 O0=C_I0

#---------------------------------------------------------------

# INIT_LOAD START ----------------------------------------------
##.subckt COUNTER ENABLE=INIT_LOAD Z1=COUNTER_1 Z0=COUNTER_0

#.subckt DEMUX2 I=INIT_LOAD O1=LOAD_ENA O2=LOAD_ENB O3=LOAD_ENC S0=SEL_0 S1=SEL_1

#.subckt OR3 A=MAIN_ENA B=LOAD_ENA C=RESET O=EN_A
#.subckt OR3 A=MAIN_ENB B=LOAD_ENB C=RESET O=EN_B
#.subckt OR3 A=MAIN_ENC B=LOAD_ENC C=RESET O=EN_C

#LOAD OR FOR CHECKING WICH REGISTER NEED TO READ THE INPUTS
.subckt OR A=MAIN_ENA B=RESET C=EN_A
.subckt OR A=MAIN_ENB B=RESET C=EN_B
.subckt OR A=MAIN_ENC B=RESET C=EN_C

# C REG LEQ (DOES min(Input,24))
.subckt C_REG_SELECT I4=I4 I3=I3 I2=I2 I1=I1 I0=I0 O4=C_IN4 O3=C_IN3 O2=C_IN2 O1=C_IN1 O0=C_IN0
# INIT_LOAD_FINISH ---------------------------------------------

# INIT_MAIN_START ----------------------------------------------


#IN/OUT DECODER
.subckt DECODER2 A=I4 B=I3 O=OUTPUT_INOUT E=ERROR_INOUT





#MUX SELECTOR INPUT BASED FROM SECTOR DECODER
.subckt MUX2_5 C4=A_O4 C3=A_O3 C2=A_O2 C1=A_O1 C0=A_O0 B4=B_O4 B3=B_O3 B2=B_O2 B1=B_O1 B0=B_O0 A4=C_O4 A3=C_O3 A2=C_O2 A1=C_O1 A0=C_O0 S0=SEL_SECT0 S1=SEL_SECT1 O4=MAIN_4 O3=MAIN_3 O2=MAIN_2 O1=MAIN_1 O0=MAIN_0



#NOR FOR CHECKING IF THE DECODER OUPUT IS SELECTING REGISTER C
.subckt NOR A=SEL_SECT0 B=SEL_SECT1 C=IS_REGISTER_C

#GET MAX BASED ON IS_REGISTER_C
.subckt MUX_5 A4=CONST1 A3=CONST1 A2=CONST1 A1=CONST1 A0=CONST1 B4=CONST1 B3=CONST1 B2=CONST0 B1=CONST0 B0=CONST0 O4=MAX_4 O3=MAX_3 O2=MAX_2 O1=MAX_1 O0=MAX_0  S=IS_REGISTER_C

#LESS_EQUAL FIRST CHECK CALCULATING ERROR
.subckt LESS_EQUAL A4=MAX_4 A3=MAX_3 A2=MAX_2 A1=MAX_1 A0=MAX_0 B4=MAIN_4 B3=MAIN_3 B2=MAIN_2 B1=MAIN_1 B0=MAIN_0 O=ERROR_MAX_REACHED

#MUX SELECTOR FOR INPUT + 1 OR OUPUT - 1
.subckt PLUS_MINUS_1 A4=MAIN_4 A3=MAIN_3 A2=MAIN_2 A1=MAIN_1 A0=MAIN_0 D=OUTPUT_INOUT O4=MAIN_OUT4 O3=MAIN_OUT3 O2=MAIN_OUT2 O1=MAIN_OUT1 O0=MAIN_OUT0
#REGISTER ENABLE INPUT MUX

#ERROR SIGNAL
.subckt NOR3 A=ERROR_INOUT B=ERROR_SECTOR C=ERROR_MAX_REACHED O=ERROR_SIGNAL

#MUX SELECTOR FOR INPUT (Select between the INPUT(5) or THE OUTPUT OF THE CALCULATION(5))
.subckt MUX_5 A4=I4 A3=I3 A2=I2 A1=I1 A0=I0 B4=MAIN_OUT4 B3=MAIN_OUT3 B2=MAIN_OUT2 B1=MAIN_OUT1 B0=MAIN_OUT0 S=INIT_MAIN O4=LIGHT_MUX4 O3=LIGHT_MUX3 O2=LIGHT_MUX2 O1=LIGHT_MUX1 O0=LIGHT_MUX0
#LIGHT FULL 
.subckt LESS_EQUAL A4=MAX_4 A3=MAX_3 A2=MAX_2 A1=MAX_1 A0=MAX_0 B4=LIGHT_MUX4 B3=LIGHT_MUX3 B2=LIGHT_MUX2 B1=LIGHT_MUX1 B0=LIGHT_MUX0 O=FULL_LIGHT



#ENABLE DECODER
.subckt DEMUX2 I=FULL_LIGHT S0=SEL_SECT0 S1=SEL_SECT1 O0=OUT_LIGHTC O1=OUT_LIGHTB O2=OUT_LIGHTA
#DEMUX LOAD
.subckt OR A=ERROR_SIGNAL B=INIT_LOAD C=ENABLE_SIGNAL

#SELECTOR REGISTER
.subckt DEMUX2 I=ENABLE_SIGNAL S0=SEL_SECT0 S1=SEL_SECT1 O0=MAIN_ENC O1=MAIN_ENB O2=MAIN_ENA



#INIT_MAIN_END -------------------------------------------------


.names ERROR_SECTOR INIT_MAIN O4
11 1


.names ERROR_SIGNAL SBARRA
1 1


.names SBARRA INIT_MAIN O3
11 1



.names LIGHT_C OUT_LIGHTC O0
1- 1
-1 1
.names LIGHT_B OUT_LIGHTB O1
1- 1
-1 1
.names LIGHT_A OUT_LIGHTA O2
1- 1
-1 1

.names CONST1
1
.names CONST0
0

.end



.search register/reg5_e.blif
.search mux/mux_5.blif
.search prefab/mux2_5pre.blif
.search mux/demux2.blif
.search mux/mux2.blif
.search mux/mux_3.blif
.search operation/counter.blif
.search operation/decoder2.blif
.search operation/decoder3.blif
.search port/nor.blif
.search port/or3.blif
.search port/xor.blif
.search logic/c_reg_sel.blif
.search logic/leq.blif
.search mux/mux2_5.blif
.search operation/plus_minus1.blif
.search port/nor3.blif
.search port/and.blif

#?# LOAD REGISTER
# 1 1 1 1 0 0 1 1 0 0 | 0 0 0 0 0
# 1 1 1 1 1 0 1 0 1 0 | 0 0 0 1 0
# 1 0 1 1 1 0 1 0 0 1 | 0 0 0 1 0
# 1 1 1 1 0 0 1 0 0 1 | 0 0 0 1 1
#!#